const handler = async (m, {isOwner, isAdmin, conn, text, participants, args, command, usedPrefix}) => {

  if (usedPrefix == 'a' || usedPrefix == 'A') return;
m.react('ü§ç') 
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  const pesan = args.join` `;
const oi = `ùôºùô¥ùôΩùöÇùô∞ùôπùô¥: ${pesan}`;
  let teks = `‚ùÑüéÖüèªùô∞ùô≤ùöÉùô∏ùöÖùô¥ùôΩùöÇùô¥ ùô±ùôæùöÉùöÇ ùôªùô¥ùöÇ ùô∑ùô∞ùô±ùôªùô∞ ùöÇùô∞ùôΩùöÉùô∞ ùô≤ùôªùô∞ùöÑùöÇüéÖüèª‚ùÑ\ ${participants.length} ‚ùÑùô±ùôæùöÉùöÇ:‚ùÑ\n\n ${oi}\n\n`;
  for (const mem of participants) {
    teks += `‚îä‚ùÑ @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚ï∞‚∏º ‚îÑ ‚îÑ ‚îÑ ‚îÄ  Íí∞  ◊Ö‡≠≠ *${vs}* ‡≠ß ◊Ö Íí±  ‚îÑ  ‚îÄ ‚îÑ ‚∏º`;
  conn.sendMessage(m.chat, {text: teks, mentions: participants.map((a) => a.id)} );
};
handler.help = ['todos <mesaje>'];
handler.tags = ['grupo'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
export default handler;